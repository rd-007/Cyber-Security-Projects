"""FastAPI wrapper around scannerlib."""
from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
from typing import List
from scannerlib import network_scan, match_cves, DeviceInfo

app = FastAPI(title="IoT Vulnerability Scanner")


class ScanRequest(BaseModel):
    subnet: str  # e.g., 192.168.1.0/24


class CVEResult(BaseModel):
    cve_id: str
    description: str
    severity: str | None = None


class DeviceResult(BaseModel):
    ip: str
    hostname: str | None
    vendor: str | None
    open_ports: List[int]
    cves: List[CVEResult]


@app.post("/scan", response_model=List[DeviceResult])
async def scan(req: ScanRequest):
    try:
        devices = network_scan(req.subnet)
    except ValueError as e:
        raise HTTPException(status_code=400, detail=str(e))

    results: List[DeviceResult] = []
    for d in devices:
        cves = match_cves(d)
        results.append(
            DeviceResult(
                ip=d.ip,
                hostname=d.hostname,
                vendor=d.vendor,
                open_ports=[p.port for p in d.ports if p.state == "open"],
                cves=[CVEResult(**c) for c in cves],
            )
        )
    return results
